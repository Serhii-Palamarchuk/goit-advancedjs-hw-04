{"version":3,"file":"index.js","sources":["../src/js/pixabay-api.js","../src/js/render-functions.js","../src/main.js"],"sourcesContent":["import axios from 'axios';\n\nconst API_KEY = '49211573-98fed09fb52bd65ccaa252580';\n\naxios.defaults.baseURL = 'https://pixabay.com/api/';\n\nexport async function fetchImages(query) {\n  try {\n    const response = await axios.get('', {\n      params: {\n        key: API_KEY,\n        q: query,\n        image_type: 'photo',\n        orientation: 'horizontal',\n        safesearch: true,\n      },\n    });\n\n    return response.data;\n  } catch (error) {\n    console.error('Error fetching images:', error);\n    return { hits: [] };\n  }\n}\n","import SimpleLightbox from 'simplelightbox';\nimport 'simplelightbox/dist/simple-lightbox.min.css';\n\nexport function renderGallery(images) {\n  const gallery = document.querySelector('.gallery');\n  gallery.innerHTML = images\n    .map(\n      image => `\n        <a href=\"${image.largeImageURL}\" class=\"gallery-item\">\n            <img src=\"${image.webformatURL}\" alt=\"${image.tags}\" loading=\"lazy\"/>\n            <div class=\"info\">\n                <p>üëç ${image.likes}</p>\n                <p>üëÅ ${image.views}</p>\n                <p>üí¨ ${image.comments}</p>\n                <p>‚¨áÔ∏è ${image.downloads}</p>\n            </div>\n        </a>\n    `\n    )\n    .join('');\n\n  const lightbox = new SimpleLightbox('.gallery a');\n  lightbox.refresh();\n}\n","import { fetchImages } from './js/pixabay-api.js';\nimport { renderGallery } from './js/render-functions.js';\nimport iziToast from 'izitoast';\nimport 'izitoast/dist/css/iziToast.min.css';\n\nconst form = document.querySelector('#search-form');\nconst gallery = document.querySelector('.gallery');\nconst loader = document.querySelector('.loader');\n\nform.addEventListener('submit', async event => {\n  event.preventDefault();\n  const query = event.target.search.value.trim();\n  if (!query) {\n    iziToast.error({ title: 'Error', message: 'Please enter a search query!' });\n    return;\n  }\n\n  loader.style.display = 'block';\n  gallery.innerHTML = '';\n\n  // –í –ø—Ä–æ–¥–∞–∫—à–Ω –∑–±—ñ—Ä—Ü—ñ —Ü–µ –Ω–µ –ø–æ—Ç—Ä—ñ–±–Ω–æ, –∞–ª–µ –¥–ª—è –≤ —Ü—ñ–ª—è—Ö –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü—ñ—ó –¥–æ–¥–∞—î–º–æ –ø–∞—É–∑—É, —â–æ–± –±—É–ª–æ –≤–∏–¥–Ω–æ –ª–æ–∞–¥–µ—Ä\n  await new Promise(resolve => setTimeout(resolve, 350));\n\n  const data = await fetchImages(query);\n  loader.style.display = 'none';\n\n  if (data.hits.length === 0) {\n    iziToast.warning({\n      title: 'No Results',\n      message: 'Sorry, no images found!',\n      position: 'center',\n    });\n  } else {\n    renderGallery(data.hits);\n  }\n});\n"],"names":["API_KEY","axios","fetchImages","query","error","renderGallery","images","gallery","image","SimpleLightbox","form","loader","event","iziToast","resolve","data"],"mappings":"+vBAEA,MAAMA,EAAU,qCAEhBC,EAAM,SAAS,QAAU,2BAElB,eAAeC,EAAYC,EAAO,CACvC,GAAI,CAWF,OAViB,MAAMF,EAAM,IAAI,GAAI,CACnC,OAAQ,CACN,IAAKD,EACL,EAAGG,EACH,WAAY,QACZ,YAAa,aACb,WAAY,EACb,CACP,CAAK,GAEe,IACjB,OAAQC,EAAO,CACd,eAAQ,MAAM,yBAA0BA,CAAK,EACtC,CAAE,KAAM,EAAI,CACvB,CACA,CCpBO,SAASC,EAAcC,EAAQ,CACpC,MAAMC,EAAU,SAAS,cAAc,UAAU,EACjDA,EAAQ,UAAYD,EACjB,IACCE,GAAS;AAAA,mBACIA,EAAM,aAAa;AAAA,wBACdA,EAAM,YAAY,UAAUA,EAAM,IAAI;AAAA;AAAA,wBAEtCA,EAAM,KAAK;AAAA,wBACXA,EAAM,KAAK;AAAA,wBACXA,EAAM,QAAQ;AAAA,wBACdA,EAAM,SAAS;AAAA;AAAA;AAAA,KAIvC,EACK,KAAK,EAAE,EAEO,IAAIC,EAAe,YAAY,EACvC,QAAS,CACpB,CClBA,MAAMC,EAAO,SAAS,cAAc,cAAc,EAC5CH,EAAU,SAAS,cAAc,UAAU,EAC3CI,EAAS,SAAS,cAAc,SAAS,EAE/CD,EAAK,iBAAiB,SAAU,MAAME,GAAS,CAC7CA,EAAM,eAAgB,EACtB,MAAMT,EAAQS,EAAM,OAAO,OAAO,MAAM,KAAM,EAC9C,GAAI,CAACT,EAAO,CACVU,EAAS,MAAM,CAAE,MAAO,QAAS,QAAS,+BAAgC,EAC1E,MACJ,CAEEF,EAAO,MAAM,QAAU,QACvBJ,EAAQ,UAAY,GAGpB,MAAM,IAAI,QAAQO,GAAW,WAAWA,EAAS,GAAG,CAAC,EAErD,MAAMC,EAAO,MAAMb,EAAYC,CAAK,EACpCQ,EAAO,MAAM,QAAU,OAEnBI,EAAK,KAAK,SAAW,EACvBF,EAAS,QAAQ,CACf,MAAO,aACP,QAAS,0BACT,SAAU,QAChB,CAAK,EAEDR,EAAcU,EAAK,IAAI,CAE3B,CAAC"}